/**
 * Shared file between builds so that they can all use the same dependencies and
 * maven repositories.
 **/
ext.deps = [:]
def versions = [:]
versions.android_gradle_plugin = "7.0.2"
versions.appcompat = "1.1.0"
versions.arch_core = "2.1.0"
versions.compose = "1.0.2"
versions.compose_activity = "1.3.1"
versions.constraint_layout = "1.1.3"
versions.core_ktx = "1.3.0"
versions.coroutines = "1.3.6"
versions.fragment = "1.2.1"
versions.glide = "4.11.0"
versions.hamcrest = "1.3"
versions.junit = "4.13"
versions.kotlin = "1.5.21"
versions.lifecycle = "2.2.0"
versions.navigation = "2.3.5"
versions.mockito = "2.25.0"
versions.okhttp_logging_interceptor = "3.9.0"
versions.recyclerview = "1.2.0-alpha04" // Concat Adapter
versions.retrofit = "2.9.0"
ext.versions = versions

def build_versions = [:]
build_versions.min_sdk = 30
build_versions.compile_sdk = 30
build_versions.target_sdk = 30
build_versions.build_tools = "30.0.0"
ext.build_versions = build_versions

def deps = [:]

deps.android_gradle_plugin = "com.android.tools.build:gradle:$versions.android_gradle_plugin"

deps.app_compat = "androidx.appcompat:appcompat:$versions.appcompat"

def arch_core = [:]
arch_core.runtime = "androidx.arch.core:core-runtime:$versions.arch_core"
arch_core.testing = "androidx.arch.core:core-testing:$versions.arch_core"
deps.arch_core = arch_core

def compose = [:]
compose.activity = "androidx.activity:activity-compose:$versions.compose_activity"
compose.livedata = "androidx.compose.runtime:runtime-livedata:$versions.compose"
compose.material = "androidx.compose.material:material:$versions.compose"
compose.tooling = "androidx.compose.ui:ui-tooling:$versions.compose"
compose.ui = "androidx.compose.ui:ui:$versions.compose"
deps.compose = compose

deps.constraint_layout = "androidx.constraintlayout:constraintlayout:$versions.constraint_layout"

deps.core_ktx = "androidx.core:core-ktx:$versions.core_ktx"

def coroutines = [:]
coroutines.core = "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.coroutines"
coroutines.android = "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutines"
coroutines.test = "org.jetbrains.kotlinx:kotlinx-coroutines-test:$versions.coroutines"
deps.coroutines = coroutines

def fragment = [:]
fragment.runtime_ktx = "androidx.fragment:fragment-ktx:${versions.fragment}"
deps.fragment = fragment

def glide = [:]
glide.runtime = "com.github.bumptech.glide:glide:${versions.glide}"
glide.compiler = "com.github.bumptech.glide:compiler:${versions.glide}"
deps.glide = glide

deps.hamcrest = "org.hamcrest:hamcrest-all:$versions.hamcrest"

deps.junit = "junit:junit:$versions.junit"

def kotlin = [:]
kotlin.stdlib = "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$versions.kotlin"
kotlin.test = "org.jetbrains.kotlin:kotlin-test-junit:$versions.kotlin"
kotlin.gradle_plugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
deps.kotlin = kotlin

def lifecycle = [:]
lifecycle.livedata_ktx = "androidx.lifecycle:lifecycle-livedata-ktx:$versions.lifecycle"
lifecycle.viewmodel_ktx = "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycle"
lifecycle.viewmodel_savedstate = "androidx.lifecycle:lifecycle-viewmodel-savedstate:$versions.lifecycle"
deps.lifecycle = lifecycle

def navigation = [:]
navigation.fragment_ktx = "androidx.navigation:navigation-fragment-ktx:$versions.navigation"
navigation.ui_ktx = "androidx.navigation:navigation-ui-ktx:$versions.navigation"
navigation.safe_args_gradle_plugin = "androidx.navigation:navigation-safe-args-gradle-plugin:$versions.navigation"
deps.navigation = navigation

def mockito = [:]
mockito.inline = "org.mockito:mockito-inline:$versions.mockito"
deps.mockito = mockito

deps.okhttp_logging_interceptor = "com.squareup.okhttp3:logging-interceptor:${versions.okhttp_logging_interceptor}"

deps.recycler_view = "androidx.recyclerview:recyclerview:$versions.recyclerview"

def retrofit = [:]
retrofit.runtime = "com.squareup.retrofit2:retrofit:$versions.retrofit"
retrofit.gson = "com.squareup.retrofit2:converter-gson:$versions.retrofit"
retrofit.mock = "com.squareup.retrofit2:retrofit-mock:$versions.retrofit"
deps.retrofit = retrofit

ext.deps = deps